# Default values for mlflow-oidc-proxy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/meln5674/mlflow-oidc-proxy
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hostname: chart-example.local
  extraRules: []
  tls:
    secretName: ''
  extraTLS: []

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

config:
  existingConfigMap:
    name: ''
    key: mlflow-oidc-proxy.cfg
  yaml:
    http:
      # Address and port to listen on
      address: 0.0.0.0:8080
      # The external URL this server is accessible to users at
      # externalURL: http[s]://<external hostname>[:<port>][/<path>]
      # Path to serve tenants at.
      # This assumes all tenants (see below) have --static-prefix=<externalURL path>/<this path>/<tenant id>
      # This is concatenated with any path from externalURL (see above) when issuing static links
      # tenantsPath: /tenants/
    # TLS configuration
    tls: {}
      # Set to true to serve using TLS (HTTPS)
      # enabled: false
      # Path to your TLS certificate file
      # certFile: '' # </path/to/tls.crt>
      # Path to your TLS private key
      # keyFile: '' # </path/to/tls.key> 
    # MLFlow tracking server configuration
    mlflow:
      tenants: []
      # - name: tenant-name
      #   # URL of the Upstream MLFlow server
      #   upstream: http[s]://<host>:<port>[/<base path>]
    # OIDC authentication/authorization configuration
    oidc:
      # How to extract the JWT token from a request
      # raw: Extract a raw header value (see tokenHeader)
      # bearer: Extract the token using Bearer scheme authentication
      # basic-user: Extract the token using the username from Basic scheme authentication (password is ignored)
      # basic-password: Extract the token using the password from Basic scheme authentication (username is ignored)
      tokenMode: raw

      # Name of the HTTP header to use when using the 'raw' token mode (see tokenMode).
      # Ignored if not using the raw token mode.
      # Defaults to X-Forwarded-Access-Token,
      # which is provided by OAuth2Proxy using --pass-access-token flag
      tokenHeader: X-Forwarded-Access-Token 
    
      # A go template which validates that a user is allowed to perform a request within a tenant.
      # If the access should be denied, it must produce an error message (Or an HTML document with that 
      # error message) explaining the reason.
      # If the result is entirely whitespace (or empty), access is granted.
      # 
      # Variables provided:
      # .Token: See https://pkg.go.dev/github.com/golang-jwt/jwt/v4#section-readme
      # .Tenants: The list of tenants, (as provided in the field mlflow.tenants)
      # .Request A request object, see https://pkg.go.dev/net/http#Request for available fields
      # 
      # The default policy checks if a user has a Keycloak realm role matching the ID of the tenant
      # in question, and allows all requests if they do
      # rbacPolicy: |-
      # <template>
       
