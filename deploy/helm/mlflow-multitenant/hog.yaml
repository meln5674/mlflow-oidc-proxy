apiVersion: helm-hog.meln5674.github.com/v1alpha1
Kind: Project

partsDirs:
- hog/parts

variables:
  keycloak:
    on: []
    off: ['no-keycloak']
  oauth2-proxy:
    on: []
    off: ['no-oauth2-proxy']
  mlflow-oidc-proxy:
    on: []
    off: ['no-mlflow-oidc-proxy']
  postgres:
    on: []
    off: ['no-postgres']
  storage:
    external: ['no-minio']
    minio: []
    pvc: ['pvc-store']
  tenants:
    zero: []
    one: ['single-tenant']
    two: ['two-tenants']
  mlflow-values:
    none: []
    values: ['mlflow-values']
    values-template: ['mlflow-values-template']
    values-and-template: ['mlflow-values-and-template']
  robots:
    off: []
    on: ['robots']
requirements:
  # keycloak, oauth2, and the robots are only interacted w/ by the proxy,
  # so we don't have to bother testing external ones different permutations of mlflow itself
  test1.1:
    if: {keycloak: off}
    then: {mlflow-values: none, storage: minio}
  test1.2:
    if: {oauth2-proxy: off}
    then: {mlflow-values: none, storage: minio}
  test1.3:
    if: {robots: off}
    then: {mlflow-values: none, storage: minio}
  test1.4:
    if: {mlflow-oidc-proxy: off}
    then: {mlflow-values: none, storage: minio}

  # And counter to that, if we are testing mlflow itself,
  # we don't need to test permiations of the proxy components
  test2.1:
    if: {mlflow-values: values}
    then: {keycloak: on, oauth2-proxy: on, mlflow-oidc-proxy: on, robots: on}
  test2.2:
    if: {mlflow-values: values-template}
    then: {keycloak: on, oauth2-proxy: on, mlflow-oidc-proxy: on, robots: on}
  test2.3:
    if: {mlflow-values: values-and-template}
    then: {keycloak: on, oauth2-proxy: on, mlflow-oidc-proxy: on, robots: on}
  test2.4:
    if: {storage: minio}
    then: {keycloak: on, oauth2-proxy: on, mlflow-oidc-proxy: on, robots: on}
  test2.5:
    if: {storage: pvc}
    then: {keycloak: on, oauth2-proxy: on, mlflow-oidc-proxy: on, robots: on}
